on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  qa:
    name: qa
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install black flake8 isort
      - name: Check isort
        run: isort --check .

      - name: Check black
        run: black --check .

      - name: Check flake8
        run: flake8 .

  test-purepython:
    env:
      USE_RUST: "0"
    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-22.04
          - macos-latest
        include:
          - name: ubuntu-22.04
            os: ubuntu-22.04
            compiler_fc: gfortran
          - name: macos-latest
            os: macos-latest
            compiler_fc: gfortran-12
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install eccodes and Dependencies
        id: install-dependencies
        uses: ecmwf/build-package@v2
        with:
          self_build: false
          dependencies: |
            ecmwf/ecbuild@develop
            MathisRosenhauer/libaec@master
            ecmwf/eccodes@develop

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install setuptools
        run: |
          python -m pip install --upgrade pip setuptools

      - name: Install Polytope
        run: |
          python -m pip install -v .[test]

      - name: Run Tests with Repository Code
        env:
          LD_LIBRARY_PATH: ${{ steps.install-dependencies.outputs.lib_path }}
        shell: bash -eux {0}
        run: |
          DYLD_LIBRARY_PATH=${{ env.LD_LIBRARY_PATH }} python -m pytest -m "not fdb" tests --cov=./ --cov-report=xml
          python -m coverage report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml

  test-rust:
    env:
      USE_RUST: "1"
    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-22.04
          - macos-latest
        include:
          - name: ubuntu-22.04
            os: ubuntu-22.04
            compiler_fc: gfortran
          - name: macos-latest
            os: macos-latest
            compiler_fc: gfortran-12
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install eccodes and Dependencies
        id: install-dependencies
        uses: ecmwf/build-package@v2
        with:
          self_build: false
          dependencies: |
            ecmwf/ecbuild@develop
            MathisRosenhauer/libaec@master
            ecmwf/eccodes@develop

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install setuptools
        run: |
          python -m pip install --upgrade pip setuptools

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Polytope
        run: |
          python -m pip install -v .[test]

      - name: Run Tests with Repository Code
        env:
          LD_LIBRARY_PATH: ${{ steps.install-dependencies.outputs.lib_path }}
        shell: bash -eux {0}
        run: |
          DYLD_LIBRARY_PATH=${{ env.LD_LIBRARY_PATH }} python -m pytest -m "not fdb" tests --cov=./ --cov-report=xml
          python -m coverage report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml