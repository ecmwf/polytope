name: ci

on:
  # Trigger the workflow on push to master or develop, except tag creation
  push:
    branches:
      - "main"
      - "develop"
    tags-ignore:
      - "**"

  # Trigger the workflow on pull request
  pull_request: ~

  # Trigger the workflow manually
  workflow_dispatch: ~

  # Trigger after public PR approved for CI
  pull_request_target:
    types: [labeled]

jobs:
  # Run CI including downstream packages on self-hosted runners
  downstream-ci:
    name: downstream-ci
    if: ${{ !github.event.pull_request.head.repo.fork && github.event.action != 'labeled' || github.event.label.name == 'approved-for-ci' }}
    uses: ecmwf/downstream-ci/.github/workflows/downstream-ci.yml@main
    with:
      polytope: ecmwf/polytope@${{ github.event.pull_request.head.sha || github.sha }}
      codecov_upload: true
      python_qa: true
    secrets: inherit

  downstream-ci-hpc:
    name: downstream-ci-hpc
    if: ${{ !github.event.pull_request.head.repo.fork && github.event.action != 'labeled' || github.event.label.name == 'approved-for-ci' }}
    uses: ecmwf/downstream-ci/.github/workflows/downstream-ci-hpc.yml@main
    with:
      polytope: ecmwf/polytope@${{ github.event.pull_request.head.sha || github.sha }}
    secrets: inherit

  deploy:
    if: ${{ github.event_name == 'release' }}
    name: Upload to Pypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Build and publish
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m build
          twine upload dist/*
