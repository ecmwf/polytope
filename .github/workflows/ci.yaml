name: ci
on:
  # Trigger the workflow on push to master or develop, except tag creation
  push:
    branches:
      - 'main'
      - 'develop'
  # Trigger the workflow on pull request
  pull_request: ~
  # Trigger the workflow manually
  workflow_dispatch: ~
  # Trigger after public PR approved for CI
  pull_request_target:
    types: [labeled]
  release:
    types: [created]
jobs:
  qa:
    name: qa
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install black flake8 isort
      - name: Check isort
        run: isort --check .

      - name: Check black
        run: black --check .

      - name: Check flake8
        run: flake8 .
  test:
    name: test
    needs:
      - qa
    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-22.04
          - macos-latest
        include:
          - name: ubuntu-22.04
            os: ubuntu-22.04
            compiler_fc: gfortran
          - name: macos-latest
            os: macos-latest
            compiler_fc: gfortran-12
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install eccodes and Dependencies
        id: install-dependencies
        uses: ecmwf/build-package@v2
        with:
          self_build: false
          dependencies: |
            ecmwf/ecbuild@develop
            MathisRosenhauer/libaec@master
            ecmwf/eccodes@develop

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install pytest pytest-cov
          python -m pip install -r requirements.txt 
          python -m pip install -r ./tests/requirements_test.txt

      - name: Verify Source Distribution
        shell: bash -eux {0}
        run: |
          python setup.py sdist
          python -m pip install dist/*
      - name: Run Tests with Repository Code
        env:
          LD_LIBRARY_PATH: ${{ steps.install-dependencies.outputs.lib_path }}
        shell: bash -eux {0}
        run: |
          DYLD_LIBRARY_PATH=${{ env.LD_LIBRARY_PATH }} python -m pytest -m "not fdb" tests --cov=./ --cov-report=xml
          python -m coverage report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
  deploy:
    needs: test
    if: ${{ github.event_name == 'release' }}
    name: Upload to Pypi
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Build and publish
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m build
          twine upload dist/*