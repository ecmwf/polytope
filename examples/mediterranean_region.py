import geopandas as gpd
import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np
from earthkit import data
import pandas as pd
# from osgeo import gdal
from shapely.geometry import shape

from polytope.datacube.backends.xarray import XArrayDatacube
from polytope.engine.hullslicer import HullSlicer
from polytope.polytope import Polytope, Request
from polytope.shapes import Polygon, Select, Union, ConvexPolytope


# extracted_shape = gdal.SetConfigOption("SHAPE_RESTORE_SHX", "YES")

# shapefile = gpd.read_file("~/Downloads/World_Seas_IHO_v3/World_Seas_IHO_v3.shp")
# print(shapefile)
# polygons = []
# mediterranean_seas = ["Adriatic Sea", "Ionian Sea", "Tyrrhenian Sea", "Mediterranean Sea - Eastern Basin", "Aegean Sea", "Balearic (Iberian Sea)", "Mediterranean Sea - Western Basin", "Alboran Sea", "Ligurian Sea"]
# # mediterranean_seas = ["Mediterranean Sea - Eastern Basin", "Mediterranean Sea - Western Basin"]
# mediterranean_seas = ["Ionian Sea"]
# for i in range(100):
#     country = shapefile.iloc[i]
#     if country["NAME"] in mediterranean_seas:
#         print(country["NAME"])
#         multi_polygon = shape(country["geometry"])
#         if multi_polygon.geom_type == "MultiPolygon":
#             true_polygons = list(multi_polygon.geoms)
#             for true_polygon in true_polygons:
#                 polygons.append(true_polygon)
#         else:
#             polygons.append(multi_polygon)
# polygons_list = []

# # Now create a list of x,y points for each polygon

# for polygon in polygons:
#     xx, yy = polygon.exterior.coords.xy
#     polygon_points = [list(a) for a in zip(xx, yy)]
#     polygons_list.append(polygon_points)

polygons_list = [[[
            -5.6038061326205195,
            36.060181151761086
          ],
          [
            -4.4898368726037745,
            36.760568323603025
          ],
          [
            -2.018217576940941,
            36.73267421732177
          ],
          [
            -0.7650021594220107,
            37.6478098389814
          ],
          [
            0.03566324621522199,
            38.769270591180515
          ],
          [
            -0.34726368691531206,
            39.444579424123845
          ],
          [
            1.0800094274808316,
            41.06505966245052
          ],
          [
            3.3079479475153732,
            41.79585482320445
          ],
          [
            3.0642671718859162,
            43.00401442492466
          ],
          [
            4.24785951065374,
            43.53630286051572
          ],
          [
            6.023248018806584,
            43.10576155939239
          ],
          [
            6.754290345692738,
            43.25806568275098
          ],
          [
            7.55495575132997,
            37.038951157291265
          ],
          [
            6.54542110943936,
            37.038951157291265
          ],
          [
            5.327017231295429,
            36.67685559365589
          ],
          [
            3.9345556562743127,
            37.011158590300624
          ],
          [
            0.6970824943502691,
            36.42517059063772
          ],
          [
            -1.0783060138014378,
            35.69349082519179
          ],
          [
            -1.7049137225614572,
            35.18297118023638
          ],
          [
            -3.6543599275915426,
            35.32510677375501
          ],
          [
            -4.524648411979882,
            35.154514166107404
          ],
          [
            -5.708240750747734,
            36.03203450072627
          ]],
          [[
            6.754290345692738,
            43.334075249284695
          ],
          [
            8.773359629472765,
            44.31354853204434
          ],
          [
            10.061386586367831,
            44.11394131173262
          ],
          [
            10.618371216376744,
            42.97855126552113
          ],
          [
            11.976021252021809,
            42.02900468256087
          ],
          [
            13.055178972663526,
            41.27469754511645
          ],
          [
            14.308394390182428,
            40.82841568968348
          ],
          [
            15.49198672895028,
            40.0068281485498
          ],
          [
            16.18821751646138,
            39.01312696459718
          ],
          [
            15.317929032073067,
            38.1970224501008
          ],
          [
            12.6374405001568,
            38.11490218666785
          ],
          [
            10.44431351949845,
            36.70476997302784
          ],
          [
            9.922140428865617,
            37.34399758723117
          ],
          [
            8.181563460088853,
            36.872043310237245
          ],
          [
            7.58976729070497,
            37.038951157291265
          ],
          [
            6.7194788063166015,
            43.40998979881104
          ]],
          [[
            12.393759068756196,
            37.86798992080951
          ],
          [
            14.029901419405661,
            37.09450872577571
          ],
          [
            15.178682218798457,
            36.648934045531036
          ],
          [
            21.688440082022566,
            37.509869516108836
          ],
          [
            21.862497778900945,
            36.816329067354346
          ],
          [
            22.210613172655343,
            36.899889636469155
          ],
          [
            22.41948240890872,
            36.509159615337566
          ],
          [
            22.140990093904264,
            33.10884231413907
          ],
          [
            20.052297731373073,
            32.25917001404174
          ],
          [
            19.94786311324586,
            31.549916792720936
          ],
          [
            20.191543888875287,
            31.16346553218189
          ],
          [
            19.66937079824251,
            30.41585127464799
          ],
          [
            18.973140010731413,
            30.235561929274112
          ],
          [
            17.23256304195465,
            31.19324888796828
          ],
          [
            16.014159163810717,
            31.312288552904448
          ],
          [
            15.422362994426834,
            31.75734646273399
          ],
          [
            15.178682218798457,
            32.46500265419712
          ],
          [
            13.821032183152312,
            32.81676573787466
          ],
          [
            11.349412887490558,
            33.16714164148111
          ],
          [
            10.026574391220521,
            34.03696332608776
          ],
          [
            11.001297493734967,
            35.1829741990464
          ],
          [
            10.618370560604461,
            35.975714006796764
          ],
          [
            10.513935942477246,
            36.39715799738623
          ],
          [
            11.210166729988345,
            37.17776433497744
          ],
          [
            12.324135990005061,
            37.895465970106315
          ]],
          [[
            15.118308565529617,
            36.75180360489864
          ],
          [
            15.207013267589332,
            37.224160222303865
          ],
          [
            15.088740331509086,
            37.646767845903824
          ],
          [
            15.561832075830182,
            38.13678755640916
          ],
          [
            16.094060288190434,
            37.99711484105758
          ],
          [
            16.59672026653206,
            38.46165239052121
          ],
          [
            16.59672026653206,
            38.87719492093228
          ],
          [
            17.128948478892312,
            38.969209916065836
          ],
          [
            17.010675542812095,
            39.495977010587296
          ],
          [
            16.4488790964312,
            39.74650952689993
          ],
          [
            16.981107308792417,
            40.53761286265714
          ],
          [
            18.45951900979489,
            39.814679105696484
          ],
          [
            18.48908724381448,
            40.3350664670088
          ],
          [
            16.00535558613072,
            41.474746778060904
          ],
          [
            16.241901458291267,
            41.91631010141256
          ],
          [
            15.354854437690136,
            41.894303952910434
          ],
          [
            13.935579204727873,
            42.594735414155195
          ],
          [
            13.610328630506643,
            43.545114754370616
          ],
          [
            12.338894567645127,
            44.16343780054052
          ],
          [
            12.4275992697049,
            44.984863083592614
          ],
          [
            12.16148516352473,
            45.401605633431785
          ],
          [
            13.521623928446871,
            45.794684627566426
          ],
          [
            13.78773803462704,
            45.650186416024155
          ],
          [
            13.610328630506643,
            45.44311204754487
          ],
          [
            13.906010970707285,
            44.796333293666294
          ],
          [
            14.408670949047973,
            45.33928879618563
          ],
          [
            14.940899161409163,
            45.06845573408674
          ],
          [
            14.911330927388661,
            44.67030344577134
          ],
          [
            15.591400309849774,
            44.269397122127174
          ],
          [
            15.23658150160989,
            44.248220511323325
          ],
          [
            16.123628522210936,
            43.45932577512468
          ],
          [
            16.56715203251153,
            43.45932577512468
          ],
          [
            17.6611766912535,
            42.92038379818766
          ],
          [
            19.671816604616254,
            41.740048576472475
          ],
          [
            19.4944072004958,
            41.363882488695054
          ],
          [
            19.405702498436085,
            40.31252365607429
          ],
          [
            20.263181285017566,
            39.67827243365073
          ],
          [
            20.795409497377875,
            38.969209916065836
          ],
          [
            20.588431859237886,
            38.69280712956325
          ],
          [
            21.327637709739093,
            38.32260273840657
          ],
          [
            21.859865922099374,
            38.34579624675649
          ],
          [
            21.179796539638318,
            37.857175628346496
          ],
          [
            21.71202475199948,
            37.506163839624634
          ],
          [
            15.17744503356974,
            36.656980686870995
          ]],
          [[
            30.701324855442266,
            36.89425799764055
          ],
          [
            31.913622450263603,
            36.609966518340855
          ],
          [
            32.44585066262488,
            36.03823118235415
          ],
          [
            34.10167176774672,
            36.25312336075051
          ],
          [
            34.69303644814809,
            36.823283911235336
          ],
          [
            35.55051523472957,
            36.56248225537952
          ],
          [
            36.05317521307023,
            36.96516614856334
          ],
          [
            36.26015285121022,
            36.609966518340855
          ],
          [
            35.787061106890064,
            36.34844188568211
          ],
          [
            35.63921993678929,
            35.51046673775082
          ],
          [
            35.93490227698996,
            34.54196492248434
          ],
          [
            34.190376469807404,
            31.265888427542407
          ],
          [
            32.564123598705095,
            31.139433976247787
          ],
          [
            30.997007195642027,
            31.56868789508968
          ],
          [
            29.075071984339047,
            30.784464513841513
          ],
          [
            26.325226220475145,
            31.518289237337015
          ],
          [
            25.172065093692993,
            31.467863378886165
          ],
          [
            24.905950987512824,
            31.970895036209768
          ],
          [
            23.102288712290147,
            32.29639693687555
          ],
          [
            22.0969687556088,
            32.96871082371936
          ],
          [
            22.422219329829062,
            36.609966518340855
          ],
          [
            22.688333436009202,
            36.87060729265707
          ],
          [
            23.22056164837042,
            36.44364386259264
          ],
          [
            28.513275537958236,
            36.75224393704548
          ],
          [
            29.666436664740388,
            36.133811494089656
          ],
          [
            30.464778983281775,
            36.32462317610626
          ],
          [
            30.760461323482417,
            36.96516614856334
          ]],
          [[
            22.890090124044917,
            40.678657880347885
          ],
          [
            22.564839549824626,
            40.273807091438954
          ],
          [
            23.363181868365018,
            39.182300690556616
          ],
          [
            22.535271315804096,
            38.814632843122894
          ],
          [
            24.04325125082613,
            38.16662683514093
          ],
          [
            24.102387718866225,
            37.65340037367051
          ],
          [
            23.097067762184906,
            37.793726162771165
          ],
          [
            23.54059127248547,
            37.46588609997461
          ],
          [
            22.801385421984264,
            37.4893511863654
          ],
          [
            22.94922659208504,
            36.68741523838467
          ],
          [
            23.304045400324895,
            36.42615267471356
          ],
          [
            28.478486353833432,
            36.75851524438879
          ],
          [
            28.241940481672856,
            37.04225635052944
          ],
          [
            27.29575699303166,
            36.995039455696585
          ],
          [
            27.50273463117165,
            37.39544664406519
          ],
          [
            27.118347588911206,
            37.70020517361459
          ],
          [
            27.29575699303166,
            37.933785933165794
          ],
          [
            26.349573504390406,
            38.2363346094011
          ],
          [
            27.1479158229308,
            38.398726389892204
          ],
          [
            26.793097014691,
            38.67626525888275
          ],
          [
            27.02964288685152,
            39.0676097477363
          ],
          [
            26.70439231263032,
            39.31968320790165
          ],
          [
            26.940938184790838,
            39.59364014311484
          ],
          [
            26.113027632229887,
            39.45679644404407
          ],
          [
            26.14259586624945,
            40.0025515589183
          ],
          [
            26.793097014691,
            40.611352319203064
          ],
          [
            26.024322930169234,
            40.63379504764836
          ],
          [
            25.048571207508388,
            41.01416692031606
          ],
          [
            24.33893359102683,
            40.902519328281386
          ],
          [
            23.71800067660584,
            40.7682930238183
          ],
          [
            23.895410080726293,
            40.36398485771002
          ],
          [
            23.185772464245588,
            40.273807091438954
          ],
          [
            22.830953656004766,
            40.56644424266892
          ]]]

# Then do union of the polygon objects and cut using the slicer
poly = []
for points in polygons_list:
    # polygon = Polygon(["longitude", "latitude"], points)
    polygon = Polygon(["longitude", "latitude"], points)
    poly.append(polygon)
# request_obj = poly[0]
# for obj in poly:
#     request_obj = Union(["longitude", "latitude"], request_obj, obj)

print("DONE NOW")


# RETRIEVE USING POLYTOPE
    
options = {
    "axis_config": [
        {"axis_name": "step", "transformations": [{"name": "type_change", "type": "int"}]},
        {
            "axis_name": "date",
            "transformations": [{"name": "merge", "other_axis": "time", "linkers": ["T", "00"]}],
        },
        {
            "axis_name": "values",
            "transformations": [
                {"name": "mapper", "type": "octahedral", "resolution": 1280, "axes": ["latitude", "longitude"]}
            ],
        },
        {"axis_name": "latitude", "transformations": [{"name": "reverse", "is_reverse": True}]},
        {"axis_name": "longitude", "transformations": [{"name": "cyclic", "range": [0, 360]}]},
    ],
    "compressed_axes_config": [
        "longitude",
        "latitude",
        "levtype",
        "step",
        "date",
        "domain",
        "expver",
        "param",
        "class",
        "stream",
        "type",
    ],
    "pre_path": {"class": "od", "expver": "0001", "levtype": "sfc", "type": "fc", "stream": "oper"},
}

import pygribjump as gj

fdbdatacube = gj.GribJump()
slicer = HullSlicer()
API = Polytope(
    datacube=fdbdatacube,
    engine=slicer,
    options=options,
)

lats = []
longs = []
parameter_values = []
winds_u = []

for polygon in poly:
    request = Request(
        Select("step", [0]),
        Select("levtype", ["sfc"]),
        Select("date", [pd.Timestamp("20231102T000000")]),
        Select("domain", ["g"]),
        Select("expver", ["0001"]),
        Select("param", ["167"]),
        Select("class", ["od"]),
        Select("stream", ["oper"]),
        Select("type", ["fc"]),
        polygon,
    )
    result = API.retrieve(request)
    result.pprint()

    for i, leaf in enumerate(result.leaves):
        cubepath = leaf.flatten()
        lat = cubepath["latitude"]
        long = cubepath["longitude"]
        for lon in long:
            if lon > 180:
                lon = lon - 360
            lats.append(lat[0])
            longs.append(lon)
        temp = leaf.result
        # print(long)
        # print(lat)
        parameter_values.extend(temp)
    print("DONE")

print(longs)
parameter_values = np.array(parameter_values)
# Plot this last array according to different colors for the result on a world map
worldmap = gpd.read_file(gpd.datasets.get_path("naturalearth_lowres"))
fig, ax = plt.subplots(figsize=(12, 6))
worldmap.plot(color="darkgrey", ax=ax)
ax.scatter(longs, lats, s=8, c=parameter_values, cmap="viridis")
norm = mpl.colors.Normalize(vmin=min(parameter_values), vmax=max(parameter_values))

sm = plt.cm.ScalarMappable(cmap="viridis", norm=norm)
sm.set_array([])
# plt.colorbar(sm, label="Temperature")
fig.savefig('myimage.jpg', dpi=1200)
plt.show()
